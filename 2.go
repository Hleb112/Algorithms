package main

import (
	"fmt"
	"sync"
)

func main() {
	array := []int{2, 4, 6, 8, 10}
	var wg sync.WaitGroup  //Это структура со счетчиком, которая отслеживает сколько горутин вами было создано, и сколько из них было завершено
	wg.Add(2)              /*Метод Add принимает int аргумент, который является delta (дельтой) для счетчика WaitGroup. Где счетчика — это число со значением, по умолчанию равным 0. Он хранит число запущенных горутин. Когда WaitGroup создана, значение счетчика будет равно 0, и мы можем увеличивать его, передавая delta как параметр метода Add. Счетчика не понимает автоматически, когда была запущена программа, поэтому нам нужно вручную увеличивать его, используя функцию Add. */
	go func(array []int) { //горутина
		for i := 0; i <= 2; i++ { //расчет для 0 - 2
			array[i] = array[i] * array[i] //рсчет квадратов из массива

		}
		wg.Done() /* Метод Done уменьшает значение счетчика. Он не принимает никаких параметров. внутри себя он просто вызывает Add(-1)).*/
	}(array)

	go func(array []int) {
		for i := 3; i <= 4; i++ { //расчет с 3 по 4
			array[i] = array[i] * array[i]
		}
		wg.Done()
	}(array)

	wg.Wait() /* используется для блокировки текущей горутины, когда мы его вызываем. Как только счетчик достигнет 0, горутина будет разблокирована. Поэтому нам необходимо как-то уменьшать значение счетчика.*/

	fmt.Println(array)
}
